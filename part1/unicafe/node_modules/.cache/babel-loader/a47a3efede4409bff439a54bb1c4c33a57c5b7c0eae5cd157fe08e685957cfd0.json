{"ast":null,"code":"var _jsxFileName = \"/Users/Wang/Documents/GitHub/fso/part1/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: props.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: props.handleClick,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Button;\nconst Content = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [props.text, \" \", props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Content;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const calcAvg = (a, b, c) => {\n    if (a || b || c) {\n      return (a + c * -1) / (a + b + c);\n    } else {\n      return 0;\n    }\n  };\n  let average = calcAvg(good, neutral, bad);\n  const calcPos = (a, b, c) => {\n    if (a || b || c) {\n      return a / (a + b + c) * 100;\n    } else {\n      return 0;\n    }\n  };\n  let positive = calcPos(good);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      name: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      text: \"all\",\n      value: good + neutral + bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      text: \"average\",\n      value: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      text: \"average\",\n      value: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Header","props","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","Button","onClick","handleClick","text","_c2","Content","value","_c3","App","_s","good","setGood","neutral","setNeutral","bad","setBad","calcAvg","a","b","c","average","calcPos","positive","_c4","$RefreshReg$"],"sources":["/Users/Wang/Documents/GitHub/fso/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Header = (props) => {\n  return (\n    <h1>{props.name}</h1>\n  )\n}\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.handleClick}>\n      {props.text}\n    </button>\n  )\n}\n\nconst Content = (props) => {\n  return (\n    <p>\n      {props.text} {props.value}\n    </p>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const calcAvg = (a, b, c) => {\n    if (a || b || c) {\n      return (a + c*-1) / (a + b + c)\n    } else {\n      return 0\n    }\n  }\n  let average = calcAvg(good, neutral, bad)\n\n  const calcPos = (a, b, c) => {\n    if (a || b || c) {\n      return (a / (a+b+c)) * 100\n    } else {\n      return 0\n    }\n  }\n\n  let positive = calcPos(good) \n\n  return (\n    <div>\n      <Header name=\"give feedback\"/>\n      <Button handleClick={() => setGood(good + 1)} text=\"good\" />\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"neutral\" />\n      <Button handleClick={() => setBad(bad + 1)} text=\"bad\" />\n\n      <Header name=\"statistics\"/>\n      <Content text=\"good\" value={good} />\n      <Content text=\"neutral\" value={neutral} />\n      <Content text=\"bad\" value={bad} />\n      <Content text=\"all\" value={good + neutral + bad} />\n      <Content text=\"average\" value={average} />\n      <Content text=\"average\" value={average} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}